function canGiveChange(N, H, m, B, S) {
  // Створюємо масив для покупця і заповнюємо його монетами
  let buyerCoins = [];
  for (let i = 0; i < N; i++) {
      for (let j = 0; j < H[i]; j++) {
          buyerCoins.push(H[i]);
      }
  }

  // Створюємо масив для продавця і заповнюємо його монетами
  let sellerCoins = [];
  for (let i = 0; i < m; i++) {
      for (let j = 0; j < B[i]; j++) {
          sellerCoins.push(B[i]);
      }
  }

  // Сортуємо монети продавця у порядку спадання
  sellerCoins.sort((a, b) => b - a);

  // Ініціалізуємо змінну для знаходження здачі
  let change = 0;

  // Перевіряємо, чи може покупець отримати здачу від продавця
  while (S > 0 && sellerCoins.length > 0) {
      let coin = sellerCoins.shift(); // Беремо монету з найбільшим номіналом

      if (coin <= S) {
          S -= coin; // Зменшуємо суму, що залишилася для здачі
          change += coin; // Додаємо монету до здачі
      }
  }

  // Перевіряємо, чи отримана здача відповідає оригінальній сумі
  if (change === S) {
      return true; // Повертаємо true, якщо можливо видати здачу
  } else {
      return false; // Повертаємо false, якщо неможливо видати здачу
  }
}

// Приклад використання функції
const N = 3; // Кількість типів монет у покупця
const H = [1, 2, 5]; // Номінали монет у покупця
const m = 4; // Кількість типів монет у продавця
const B = [1, 2, 2, 5]; // Номінали монет у продавця
const S = 7; // Сума, за яку хочуть купити товар

console.log(canGiveChange(N, H, m, B, S)); // Перевіряємо, чи можливо отримати здачу
